}
return(G)
}
plot.iww.pgons(pgons=pogons,track,plot.title)
plot.iww.pgons <- function(pgons,track,plot.title,plot.boundary=T,plot.coastline=T,
save.out=T){
transdf <- data.frame(coordinates(track))
xlims <- c(min(transdf$coords.x1)*0.99, max(transdf$coords.x1)*1.01)
ylims <- c(min(transdf$coords.x2)*0.999, max(transdf$coords.x2)*1.001)
pgons@data$id <- rownames(pgons@data)
pgons_fort <- fortify(pgons,region="id")
pgons_fort_df <- merge(pgons_fort,pgons@data,by="id")
G <- ggplot(pgons_fort_df, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill=Number),col = "grey35", alpha = 0.7) +
scale_fill_gradient(trans = 'sqrt', low = "blue", high = "red",
name="Count") +
scale_x_continuous(breaks=seq(425,525,25),label=seq(4.25,5.25,.25))+
scale_y_continuous(breaks=seq(6380,6440,20),label=seq(6.38,6.44,.02))+
xlab(expression(X(meters~x~10^{"6"})))+
ylab(expression(Y(meters~x~10^{"7"})))+
ggtitle(plot.title)+
theme_gdocs()+
theme(
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black"),
plot.background = element_blank()
)+
coord_equal(xlim = xlims, ylim = ylims)
if(plot.coastline==TRUE){
print("loading high resolution coastline.. this may take a moment..")
load(file = 'D:/GIS_DATA/UK_coastline.rda')
coastline_sp_utm <- spTransform(tt, UTM30)
coastData_DF <- fortify(coastline_sp_utm)
G <- G +
geom_polygon(aes(x = long, y = lat, group = group),
data = coastData_DF, fill = "darkolivegreen3",
col = "grey35", alpha = 0.7)
}
if(plot.boundary==TRUE){
boundary.shape <- readOGR(dsn="./Data/Shapefile/Moray_Firth_Area_WGS84.shp",
layer="Moray_Firth_Area_WGS84")
boundaryUTM30 <- spTransform(boundary.shape,UTM30)
boundary_DF <- fortify(boundaryUTM30)
G <- G +
geom_polygon(aes(x=long,y=lat,group=group),data=boundary_DF,
col="black",alpha=0)
}
if(save.out==T){
oname <- paste0("outputs/",gsub(" ","_",plot.title),".jpeg")
ggsave(filename=oname,plot=G,device="jpeg",width=8,height=6)
}
return(G)
}
plot.iww.pgons(pgons=pogons,track,plot.title,plot.coastline=F)
plot.iww.pgons(pgons=pogons,track,plot.title,plot.coastline=T)
month <- "01"
survey.date <- "2020-01-19"
source("scripts/helpers.R")
#survey.date <- "2020-03-08"
# Load data ------------------------------------------------------------
data.loaded <- load_month_data(month,spp)
load_VP_data()
locs.iww <- subset_IWW_date(survey.date = survey.date)
locs.sea <- calculate.buffer(locs.iww = locs.iww,
mask = mask,
buffer.size=2)
merge.iww_to_WeBS_polys(iww = iww,
locs.sea = locs.sea,
polygs = polygs)
plot.basic.view(locs.sea = locs.sea,
mask = mask,
locs.iww = locs.iww,
polygs.iww = polygs.iww)
counts <- subset_species(iww.locs = iww.locs,spp = spp)
outputs <- create.polygons(locs.sea,
iww.aggr,
counts,
save.output = F,
spp = spp,
survey.date = survey.date)
plot.title = "Common Scoter IWW counts (January 2020)"
plot.iww.pgons(pgons=outputs$locs.dens,track=data.loaded$track,
plot.title=plot.title)
outputs$polygs.dens
counts
survey.date
survey.date <- "2020-03-08"
month <- "03"
# Load data ------------------------------------------------------------
data.loaded <- load_month_data(month,spp)
# Wrangling the IWW data --------------------------------------------------
load_VP_data()
locs.iww <- subset_IWW_date(survey.date = survey.date)
locs.sea <- calculate.buffer(locs.iww = locs.iww,
mask = mask,
buffer.size=2)
merge.iww_to_WeBS_polys(iww = iww,
locs.sea = locs.sea,
polygs = polygs)
plot.basic.view(locs.sea = locs.sea,
mask = mask,
locs.iww = locs.iww,
polygs.iww = polygs.iww)
outputs <- create.polygons(locs.sea,
iww.aggr,
counts,
save.output = F,
spp = spp,
survey.date = survey.date)
counts <- subset_species(iww.locs = iww.locs,spp = spp)
counts <- subset_species(iww.locs = iww.locs,spp = spp)
outputs <- create.polygons(locs.sea,
iww.aggr,
counts,
save.output = F,
spp = spp,
survey.date = survey.date)
outputs
counts
outputs$polygs.dens@data
test1 <- outputs$polygs.dens@data
month <- "03"
survey.date <- "2020-03-08"
# Load data ------------------------------------------------------------
data.loaded <- load_month_data(month,spp)
# Wrangling the IWW data --------------------------------------------------
load_VP_data()
locs.iww <- subset_IWW_date(survey.date = survey.date)
locs.iww
locs.sea <- calculate.buffer(locs.iww = locs.iww,
mask = mask,
buffer.size=2)
merge.iww_to_WeBS_polys(iww = iww,
locs.sea = locs.sea,
polygs = polygs)
plot.basic.view(locs.sea = locs.sea,
mask = mask,
locs.iww = locs.iww,
polygs.iww = polygs.iww)
counts <- subset_species(iww.locs = iww.locs,spp = spp)
outputs <- create.polygons(locs.sea,
iww.aggr,
counts,
save.output = F,
spp = spp,
survey.date = survey.date)
test1
outputs$polygs.dens@data
source("scripts/helpers.R")
source("scripts/species_list.R")
#View(Species)
spp <- "Common scoter"
month <- "03"
survey.date <- "2020-03-08"
# Load data ------------------------------------------------------------
data.loaded <- load_month_data(month,spp)
# Wrangling the IWW data --------------------------------------------------
load_VP_data()
source('D:/PROJECTS_CURRENT/SNH_Moray_Firth/SNH_Moray_Firth/scripts/helpers.R')
locs.iww <- subset_IWW_date(survey.date = survey.date)
locs.sea <- calculate.buffer(locs.iww = locs.iww,
mask = mask,
buffer.size=2)
merge.iww_to_WeBS_polys(iww = iww,
locs.sea = locs.sea,
polygs = polygs)
plot.basic.view(locs.sea = locs.sea,
mask = mask,
locs.iww = locs.iww,
polygs.iww = polygs.iww)
counts <- subset_species(iww.locs = iww.locs,spp = spp)
outputs <- create.polygons(locs.sea,
iww.aggr,
counts,
save.output = F,
spp = spp,
survey.date = survey.date)
plot.title = "Common Scoter IWW counts (January 2020)"
plot.iww.pgons(pgons=outputs$locs.dens,track=data.loaded$track,
plot.title=plot.title)
plot.title = "Common Scoter IWW counts (March 2020)"
month <- "01"
#month <- "03"
survey.date <- "2020-01-19"
load_VP_data()
locs.iww <- subset_IWW_date(survey.date = survey.date)
locs.sea <- calculate.buffer(locs.iww = locs.iww,
mask = mask,
buffer.size=2)
merge.iww_to_WeBS_polys(iww = iww,
locs.sea = locs.sea,
polygs = polygs)
plot.basic.view(locs.sea = locs.sea,
mask = mask,
locs.iww = locs.iww,
polygs.iww = polygs.iww)
counts <- subset_species(iww.locs = iww.locs,spp = spp)
outputs <- create.polygons(locs.sea,
iww.aggr,
counts,
save.output = F,
spp = spp,
survey.date = survey.date)
plot.title = "Common Scoter IWW counts (March 2020)"
plot.iww.pgons(pgons=outputs$locs.dens,track=data.loaded$track,
plot.title=plot.title)
plot.title = "Common Scoter IWW counts (January 2020)"
plot.title = "Common Scoter IWW counts (January 2020)"
plot.iww.pgons(pgons=outputs$locs.dens,track=data.loaded$track,
plot.title=plot.title)
month <- "03"
#survey.date <- "2020-01-19"
survey.date <- "2020-03-08"
load_VP_data()
locs.iww <- subset_IWW_date(survey.date = survey.date)
locs.sea <- calculate.buffer(locs.iww = locs.iww,
mask = mask,
buffer.size=2)
merge.iww_to_WeBS_polys(iww = iww,
locs.sea = locs.sea,
polygs = polygs)
plot.basic.view(locs.sea = locs.sea,
mask = mask,
locs.iww = locs.iww,
polygs.iww = polygs.iww)
counts <- subset_species(iww.locs = iww.locs,spp = spp)
outputs <- create.polygons(locs.sea,
iww.aggr,
counts,
save.output = F,
spp = spp,
survey.date = survey.date)
plot.title = "Common Scoter IWW counts (March 2020)"
plot.iww.pgons(pgons=outputs$locs.dens,track=data.loaded$track,
plot.title=plot.title)
#month <- "01"
month <- "03"
data.loaded <- load_month_data(month,spp)
# Create a mesh (fishnet) -------------------------------------------------
MESH <- create.mesh(mask = mask,
MaxEdge = 4,
track=data.loaded$track,
obs.model = data.loaded$obs.model)
# Prepare the model -------------------------------------------------------
model.data <- model.prep(obj.list = data.loaded,
jitter.points = TRUE,
MESH = MESH,
priorrange = c(15,0.5),
priorsigma = c(1,0.5))
# Run the spde model ------------------------------------------------------
lgcp.model <- lgcp.spde(modprep.list = model.data)
# Create model predictions in space ---------------------------------------
predictions <- model.predictions(MESH = MESH,lgcp.fit = lgcp.model)
# Save the predictions to the output folder
save.predictions(predicted=predictions$predicted,month = month,spp=spp)
##
#prediction.raster <- readRDS("outputs/Common scoter_month01.rds")
# Plot the predicted distribution -----------------------------------------
plot.abundance(predicted=predictions$predicted,track=data.loaded$track,
plot.title = "Density of Common Scoter (March 2020)",
plot.boundary = T,plot.coastline = T,round.scale = 0)
plot.abundance <- function(predicted,track,plot.title="",plot.boundary=F,
plot.coastline=F,round.scale=0,save.out=T){
breaks<-c(seq(min(predicted$mean),
max(predicted$mean),
(max(predicted$mean)/2)),max(predicted$mean))
labels <- round(breaks,round.scale)
transdf <- data.frame(coordinates(track))
xlims <- c(min(transdf$coords.x1)*0.99, max(transdf$coords.x1)*1.01)
ylims <- c(min(transdf$coords.x2)*0.999, max(transdf$coords.x2)*1.001)
G <- ggplot(predicted, aes(x=x, y=y)) + geom_raster(aes(fill= mean)) +
scale_fill_gradient(trans = 'sqrt', low = "blue", high = "red",
breaks=breaks,
labels=labels,
name=expression(Density~(Ind/km^{"2"}))) +
scale_x_continuous(breaks=seq(425,525,25),label=seq(4.25,5.25,.25))+
scale_y_continuous(breaks=seq(6380,6440,20),label=seq(6.38,6.44,.02))+
xlab(expression(X(meters~x~10^{"6"})))+
ylab(expression(Y(meters~x~10^{"7"})))+
ggtitle(plot.title)+
theme_gdocs()+
theme(
#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black"),
plot.background = element_blank()
)+
coord_equal(xlim = xlims, ylim = ylims)
if(plot.coastline==TRUE){
print("loading high resolution coastline.. this may take a moment..")
load(file = 'D:/GIS_DATA/UK_coastline.rda')
coastline_sp_utm <- spTransform(tt, UTM30)
coastData_DF <- fortify(coastline_sp_utm)
G <- G +
geom_polygon(aes(x = long, y = lat, group = group), data = coastData_DF, fill = "darkolivegreen3",
col = "grey35", alpha = 0.7)
}
if(plot.boundary==TRUE){
boundary.shape <- readOGR(dsn="./Data/Shapefile/Moray_Firth_Area_WGS84.shp",
layer="Moray_Firth_Area_WGS84")
boundaryUTM30 <- spTransform(boundary.shape,UTM30)
boundary_DF <- fortify(boundaryUTM30)
G <- G +
geom_polygon(aes(x=long,y=lat,group=group),data=boundary_DF,
col="black",alpha=0)
}
if(save.out==T){
oname <- paste0("outputs/",gsub(" ","_",plot.title),".jpeg")
ggsave(filename=oname,plot=G,device="jpeg",width=8,height=6)
}
return(G)
}
# Plot the predicted distribution -----------------------------------------
plot.abundance(predicted=predictions$predicted,track=data.loaded$track,
plot.title = "Density of Common Scoter (March 2020)",
plot.boundary = T,plot.coastline = T,round.scale = 0)
month <- "01"
#month <- "03"
survey.date <- "2020-01-19"
#survey.date <- "2020-03-08"
# Load data ------------------------------------------------------------
data.loaded <- load_month_data(month,spp)
# Create a mesh (fishnet) -------------------------------------------------
MESH <- create.mesh(mask = mask,
MaxEdge = 4,
track=data.loaded$track,
obs.model = data.loaded$obs.model)
# Prepare the model -------------------------------------------------------
model.data <- model.prep(obj.list = data.loaded,
jitter.points = TRUE,
MESH = MESH,
priorrange = c(15,0.5),
priorsigma = c(1,0.5))
# Run the spde model ------------------------------------------------------
lgcp.model <- lgcp.spde(modprep.list = model.data)
# Create model predictions in space ---------------------------------------
predictions <- model.predictions(MESH = MESH,lgcp.fit = lgcp.model)
# Save the predictions to the output folder
save.predictions(predicted=predictions$predicted,month = month,spp=spp)
##
#prediction.raster <- readRDS("outputs/Common scoter_month01.rds")
# Plot the predicted distribution -----------------------------------------
plot.abundance(predicted=predictions$predicted,track=data.loaded$track,
plot.title = "Density of Common Scoter (January 2020)",
plot.boundary = T,plot.coastline = T,round.scale = 0)
# Plot population estimate ------------------------------------------------
plot.pop.priors(pred.list = predictions)
# Get population estimate numerically -------------------------------------
predictions$marginals
source('D:/PROJECTS_CURRENT/SNH_Moray_Firth/SNH_Moray_Firth/scripts/helpers.R')
source("scripts/helpers.R")
RSPBfiles <- list.files("Data/RSPB_data_filtered/",full.names = TRUE)
spp <- "eider"
## Nairn_Culbin_Bars, Outer_Dornoch_Firth, or Inverness_Beauly_Firth
site <- "Outer_Dornoch_Firth"
month <- "DEC"
year <- 2019
predict.to <- c(site = site,
month = month,
year = year)
rspb.data <- wrangle.RSPB.data(spp,save.output=T)
rspb.m <- merge.RSPB.to.WeBS(spp,rspb.data)
rspb.merged <- rspb.m$merged
WeBS.dat <- rspb.m$WeBS
predict.rspb(WeBS.dat,rspb.merged,predict.to,month,site)
source("scripts/helpers.R")
source("scripts/species_list.R")
#View(Species)
spp <- "common scoter"
#month <- "01"
month <- "03"
#survey.date <- "2020-01-19"
survey.date <- "2020-03-08"
# Load data ------------------------------------------------------------
data.loaded <- load_month_data(month,spp)
# Create a mesh (fishnet) -------------------------------------------------
MESH <- create.mesh(mask = mask,
MaxEdge = 4,
track=data.loaded$track,
obs.model = data.loaded$obs.model)
# Prepare the model -------------------------------------------------------
model.data <- model.prep(obj.list = data.loaded,
jitter.points = TRUE,
MESH = MESH,
priorrange = c(15,0.5),
priorsigma = c(1,0.5))
# Run the spde model ------------------------------------------------------
lgcp.model <- lgcp.spde(modprep.list = model.data)
# Create model predictions in space ---------------------------------------
predictions <- model.predictions(MESH = MESH,lgcp.fit = lgcp.model)
# Save the predictions to the output folder
save.predictions(predicted=predictions$predicted,month = month,spp=spp)
##
#prediction.raster <- readRDS("outputs/Common scoter_month01.rds")
# Plot the predicted distribution -----------------------------------------
plot.abundance(predicted=predictions$predicted,track=data.loaded$track,
plot.title = "Density of Common Scoter (January 2020)",
plot.boundary = T,plot.coastline = T,round.scale = 0)
# Plot population estimate ------------------------------------------------
plot.pop.priors(pred.list = predictions)
# Get population estimate numerically -------------------------------------
predictions$marginals
spp <- "common scoter"
month <- "01"
#month <- "03"
survey.date <- "2020-01-19"
load_VP_data()
locs.iww <- subset_IWW_date(survey.date = survey.date)
locs.sea <- calculate.buffer(locs.iww = locs.iww,
mask = mask,
buffer.size=2)
iww$taxonName <- plyr::revalue(iww$taxonName, c("Common eider"="Eider"))
merge.iww_to_WeBS_polys(iww = iww,
locs.sea = locs.sea,
polygs = polygs)
plot.basic.view(locs.sea = locs.sea,
mask = mask,
locs.iww = locs.iww,
polygs.iww = polygs.iww)
counts <- subset_species(iww.locs = iww.locs,spp = spp)
outputs <- create.polygons(locs.sea,
iww.aggr,
counts,
save.output = T,
spp = spp,
survey.date = survey.date)
source("scripts/helpers.R")
load_VP_data()
locs.iww <- subset_IWW_date(survey.date = survey.date)
locs.sea <- calculate.buffer(locs.iww = locs.iww,
mask = mask,
buffer.size=2)
iww$taxonName <- plyr::revalue(iww$taxonName, c("Common eider"="Eider"))
merge.iww_to_WeBS_polys(iww = iww,
locs.sea = locs.sea,
polygs = polygs)
plot.basic.view(locs.sea = locs.sea,
mask = mask,
locs.iww = locs.iww,
polygs.iww = polygs.iww)
counts <- subset_species(iww.locs = iww.locs,spp = spp)
outputs <- create.polygons(locs.sea,
iww.aggr,
counts,
save.output = T,
spp = spp,
survey.date = survey.date)
plot(outputs$polygs.dens)
outputs$polygs.dens@data
outputs$locs.dens@data
polygs
polygs@data
source('D:/PROJECTS_CURRENT/SNH_Moray_Firth/SNH_Moray_Firth/scripts/helpers.R')
Webspolys<- readOGR(dsn = "Data/Shapefile", layer = "Banff_to_Helmsdale_WeBS")
Webspolys<-spTransform(Webspolys, UTM30)
WeBS.data <- readRDS("Data/WeBS/WeBS_wrangled_20May2020.rds")
unique(Webspolys$NAME)
unique(WeBS.data$SECTOR_NAME)
tt <- merge.data.frame(Webspolys@data,WeBS.data,by.x="NAME",by.y = "SECTOR_NAME",all.x=T)
tt
tt <- merge.data.frame(Webspolys@data,WeBS.data,by.x="NAME",by.y = "SECTOR_NAME")
tt
View(tt)
spp <- "common scoter"
tt <- tt %>%
unnest(data) %>%
dplyr::filter(tolower(SPECIES) == tolower(spp),
YEAR == 2020, MONTH == "01")
tt
names(Webspolys@data)
ts <- merge.data.frame(tt,Webspolys@data,by="NAME",all.y=T)
ts
Webspolys@data$BIRD_COUNT <- ts$BIRD_COUNT
Webspolys@data$BIRD_DENSITY <- ts$BIRD_DENSITY
month <- "01"
extracted <- raster::extract(hd.raster,Webspolys)
input.name <- paste0("outputs/",spp,"_month",month,".rds")
hd.raster <<- readRDS(input.name)
extracted <- raster::extract(hd.raster,Webspolys)
dfout <- data.frame(hd.data=unlist(lapply(extracted,function(x) mean(x,na.rm=T))),
WeBS.count=Webspolys@data$BIRD_COUNT,
WeBS.dens=Webspolys@data$BIRD_DENSITY)
dfout
source('D:/PROJECTS_CURRENT/SNH_Moray_Firth/SNH_Moray_Firth/scripts/helpers.R')
spp <- "common scoter"
month <- "01"
Webspolys<- readOGR(dsn = "Data/Shapefile", layer = "Banff_to_Helmsdale_WeBS")
Webspolys<-spTransform(Webspolys, UTM30)
#polygs$NAME<- plyr::revalue(polygs$NAME, c("Lentran"="Beauly Firth","Lentran to Bunchrew"="Beauly Firth", "Beauly Firth North"="Beauly Firth",
#                                           "South Kessock"="Beauly Firth", "Ness Mouth"="Beauly Firth"))
#polygs<<- aggregate(polygs, by= "NAME", dissolve=T)
WeBS.data <- readRDS("Data/WeBS/WeBS_wrangled_20May2020.rds")
tt <- merge.data.frame(Webspolys@data,WeBS.data,by.x="NAME",by.y = "SECTOR_NAME")
tt <- tt %>%
unnest(data) %>%
dplyr::filter(tolower(SPECIES) == tolower(spp),
YEAR == 2020, MONTH == "01")
ts <- merge.data.frame(tt,Webspolys@data,by="NAME",all.y=T)
Webspolys@data$BIRD_COUNT <- ts$BIRD_COUNT
Webspolys@data$BIRD_DENSITY <- ts$BIRD_DENSITY
input.name <- paste0("outputs/",spp,"_month",month,".rds")
hd.raster <<- readRDS(input.name)
extracted <- raster::extract(hd.raster,Webspolys)
extracted
dfout <- data.frame(hd.data=unlist(lapply(extracted,function(x) mean(x,na.rm=T))),
WeBS.count=Webspolys@data$BIRD_COUNT,
WeBS.dens=Webspolys@data$BIRD_DENSITY)
dfout
projection(hd.raster)
View(Webspolys@data)
tt
