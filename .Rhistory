ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=round,y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
geom_bar(aes(x=roundn+0.2,y=votes),
stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=round,y=votes,fill=factor(species)),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=round,y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
geom_bar(aes(x=roundn+20,y=votes),
stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=round,y=votes,fill=factor(species)),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=round,y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
geom_bar(aes(x=roundn+0.5,y=votes),
stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=round,y=votes,fill=factor(species)),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=round,y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
geom_bar(aes(x=roundn+5,y=votes),
stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=round,y=votes,fill=factor(species)),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=round,y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
geom_bar(aes(x=roundn+1,y=votes),
stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=round,y=votes,fill=factor(species)),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=round,y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
geom_bar(aes(x=roundn+0.7,y=votes),
stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=round,y=votes,fill=factor(species)),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=round,y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
geom_bar(aes(x=roundn+0.8,y=votes),
stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=round,y=votes,fill=factor(species)),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=round,y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
geom_bar(aes(x=roundn+0.8,y=votes),
stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=round,y=votes,fill=species),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=as.integer(round),y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
#geom_bar(aes(x=roundn+0.8,y=votes),
#         stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=as.integer(round)+0.1,y=votes,fill=species),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=as.integer(round),y=votes),
stat="identity",fill=NA,color=NA,width=0.7)+#,position=position_dodge())+
#geom_bar(aes(x=roundn+0.8,y=votes),
#         stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=as.integer(round),y=votes,fill=species),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=as.integer(round) +.2,y=votes),
stat="identity",fill='black',color=NA,width=0.7)+#,position=position_dodge())+
#geom_bar(aes(x=roundn+0.8,y=votes),
#         stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=as.integer(round),y=votes,fill=species),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=as.integer(round) +2,y=votes),
stat="identity",fill='black',color=NA,width=0.7)+#,position=position_dodge())+
#geom_bar(aes(x=roundn+0.8,y=votes),
#         stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=as.integer(round),y=votes,fill=species),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=as.integer(round) +1,y=votes),
stat="identity",fill='black',color=NA,width=0.7)+#,position=position_dodge())+
#geom_bar(aes(x=roundn+0.8,y=votes),
#         stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=as.integer(round),y=votes,fill=species),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=as.integer(round) +0.4,y=votes),
stat="identity",fill='black',color=NA,width=0.7)+#,position=position_dodge())+
#geom_bar(aes(x=roundn+0.8,y=votes),
#         stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=as.integer(round),y=votes,fill=species),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF) +
geom_bar(aes(x=as.integer(round) +0.4,y=votes),
stat="identity",fill='black',color=NA,width=0.7)+#,position=position_dodge())+
#geom_bar(aes(x=roundn+0.8,y=votes),
#         stat="identity",fill='black',width=0.7)+
geom_bar(aes(x=as.integer(round),y=votes,fill=species),
stat="identity",width=0.7)+#,position=position_dodge())+
#geom_bar(aes(fill=factor(round)),stat="identity",color='black',width=0.7,position=position_dodge())+
#scale_y_continuous(expand=c(0,0))+
#scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:2,labels=c("NORH","ARTE"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF,aes(x=round,y=votes)) +
geom_bar(aes(fill=species),
stat="identity",width=0.7,color='black',alpha=0.2,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
scale_fill_manual(values=cols,name="Round")+
scale_x_continuous(breaks=1:3,labels=c("R1","QF","SF"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
cols <- c("QF" = "#55415f",
"R1" = "#e6c86e",
"SF" = "#64b964")
ggplot(dataF,aes(x=round,y=votes)) +
geom_bar(aes(fill=species),
stat="identity",width=0.7,color='black',alpha=0.2,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:3,labels=c("R1","QF","SF"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
cols <- c("ARTE" = "#C3423F",
"NORH" = "#5BC0EB"
)
ggplot(dataF,aes(x=round,y=votes)) +
geom_bar(aes(fill=species),
stat="identity",width=0.7,color='black',alpha=0.2,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:3,labels=c("R1","QF","SF"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF,aes(x=round,y=votes)) +
geom_bar(aes(fill=species),
stat="identity",width=0.7,color='black',alpha=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
scale_fill_manual(values=cols,name="Round")+
#scale_x_continuous(breaks=1:3,labels=c("R1","QF","SF"))+
ylab("Number of votes")+
xlab("")+
ggthemes::theme_gdocs()
dataF$corperc <- dataF$percvote * dataF$no.species
cols <- c("ARTE" = "#C3423F",
"NORH" = "#5BC0EB"
)
ggplot(dataF,aes(x=round,y=corperc)) +
geom_bar(aes(fill=species),
stat="identity",width=0.7,color='black',alpha=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
scale_fill_manual(values=cols,name="Round")+
ylab("Percentage of vote x # species in round")+
xlab("")+
ggthemes::theme_gdocs()
dataF$corvotes <- (dataF$percvote / dataF$totalvotes) * dataF$no.species
ggplot(dataF,aes(x=round,y=corvotes)) +
geom_bar(aes(fill=species),
stat="identity",width=0.7,color='black',alpha=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
scale_fill_manual(values=cols,name="Round")+
ylab("(% vote / # votes) x # species in round")+
xlab("")+
ggthemes::theme_gdocs()
ggplot(dataF,aes(x=round,y=percvote)) +
geom_bar(aes(fill=species),
stat="identity",width=0.7,color='black',alpha=0.7,position=position_dodge())+
scale_y_continuous(expand=c(0,0))+
scale_fill_manual(values=cols,name="Round")+
ylab("% vote")+
xlab("")+
ggthemes::theme_gdocs()
setwd("C:/Workspace/Nextcloud/Github/HiDef/SNH_Moray_Firth/data")
library(rgdal)
library(readxl)
library(raster)
library(sf)
library(plyr)
geogr<-CRS("+init=epsg:4326")
main.crs = "+init=epsg:32630 +proj=utm +zone=30 +datum=WGS84 +units=km +no_defs +ellps=WGS84 +towgs84=0,0,0"
clean_units <- function(x){
attr(x,"units") <- NULL
class(x) <- setdiff(class(x),"units")
x
}
# 1. Load data ------------------------------------------------------------
# accesory layers
mask <- readOGR(dsn = "./Shapefile", layer = "Moray_Firth_Area_WGS84")
mask<-spTransform(mask, main.crs)
# We make a raster mask...
# not really needed, but it might be useful (...who knows)
extension <- extent(mask)
raster.mask <- raster()
extent(raster.mask) <- extension
crs(raster.mask) <- main.crs
res(raster.mask) <- c(1,1)
raster.mask <- rasterize(mask, raster.mask,1)
raster.mask[is.na(raster.mask[])] <- 0
# sighting locations
locs <- read_excel("VPs_sectors_coordinates_rv.xlsx",sheet=1)
# Aggregate WeBS sectors inside the Beauly Firth (overlapping areas between both sides of the firth)
locs$sector <- locs$WeBS_sector
locs$sector<- revalue(locs$WeBS_sector, c("Lentran to Bunchrew"="Beauly Firth", "Beauly Firth North"="Beauly Firth",
"South Kessock"="Beauly Firth", "Ness Mouth"="Beauly Firth"))
coordinates(locs) <- c("Lon","Lat")
crs(locs) <- geogr
locs<-spTransform(locs, main.crs)
plot(locs)
# Polygons with the WeBS areas
polygs<- readOGR(dsn = "./Shapefile", layer = "Banff_to_Helmsdale_WeBS")
polygs<-spTransform(polygs, main.crs)
names(polygs)
sort(unique(polygs$NAME))
# merge polygons within the Beauly Firth
polygs$NAME<- revalue(polygs$NAME, c("Lentran"="Beauly Firth","Lentran to Bunchrew"="Beauly Firth", "Beauly Firth North"="Beauly Firth",
"South Kessock"="Beauly Firth", "Ness Mouth"="Beauly Firth"))
polygs <- aggregate(polygs, by= "NAME", dissolve=T)
plot(polygs)
plot(locs, add=TRUE, pch=20, col="red")
spplot(polygs, ycol="NAME")  # looks good
# iww monitoring project observations
iww <- read_excel("IWW_data/IWW_2020_rv.xlsx", sheet = 2)
names(iww)
head(iww)
unique(iww$taxonName)
sort(unique(iww$VP_code))
sort(unique(locs$VP_code))
setdiff(iww$VP_code,locs$VP_code) # all codes in iww are in locs
setdiff(locs$VP_code,iww$VP_code)  # not all codes in locs are in iww, but that is ok
# 2. Subset IWW data by date ----------------------------------------------
# available dates: "2020-01-19", "2020-01-21", "2020-03-08", "2020-03-09"
# 1st aerial survey: "2020-01-19", 2nd aerial survey: "2020-03-08"
survey.date <- "2020-01-19"
iww$Date <- as.character(iww$Date)
iww <- iww[iww$Date == survey.date, ]
iww <- iww[ c(3,4,8,13,20, 21) ]
names(iww)
# subset only locs with IWW data
uniq.iww.vpcodes <- unique(iww$VP_code) # only for sectors with IWW VPs
locs.iww <- subset(locs, VP_code %in% uniq.iww.vpcodes )
# 3. Calculate buffer 2km and mask ----------------------------------------
locs.sf = st_as_sf(locs.iww)
mask.sf <- st_as_sf(mask)
locs.buffer = st_buffer(locs.sf, 2)
locs.sea = st_intersection(locs.buffer, mask.sf)
locs.sea$area = st_area(locs.sea)
locs.sea <- as(locs.sea,"Spatial")
setwd("D:/PROJECTS_CURRENT/SNH_Moray_Firth/SNH_Moray_Firth/")
library(rgdal)
library(readxl)
library(raster)
library(sf)
library(plyr)
geogr<-CRS("+init=epsg:4326")
main.crs = "+init=epsg:32630 +proj=utm +zone=30 +datum=WGS84 +units=km +no_defs +ellps=WGS84 +towgs84=0,0,0"
clean_units <- function(x){
attr(x,"units") <- NULL
class(x) <- setdiff(class(x),"units")
x
}
# 1. Load data ------------------------------------------------------------
# accesory layers
mask <- readOGR(dsn = "Data/Shapefile", layer = "Moray_Firth_Area_WGS84")
mask<-spTransform(mask, main.crs)
# We make a raster mask...
# not really needed, but it might be useful (...who knows)
extension <- extent(mask)
raster.mask <- raster()
extent(raster.mask) <- extension
crs(raster.mask) <- main.crs
res(raster.mask) <- c(1,1)
raster.mask <- rasterize(mask, raster.mask,1)
raster.mask[is.na(raster.mask[])] <- 0
# sighting locations
locs <- read_excel("Data/VPs_sectors_coordinates_rv.xlsx",sheet=1)
# Aggregate WeBS sectors inside the Beauly Firth (overlapping areas between both sides of the firth)
locs$sector <- locs$WeBS_sector
locs$sector<- revalue(locs$WeBS_sector, c("Lentran to Bunchrew"="Beauly Firth", "Beauly Firth North"="Beauly Firth",
"South Kessock"="Beauly Firth", "Ness Mouth"="Beauly Firth"))
coordinates(locs) <- c("Lon","Lat")
crs(locs) <- geogr
locs<-spTransform(locs, main.crs)
plot(locs)
# Polygons with the WeBS areas
polygs<- readOGR(dsn = "Data/Shapefile", layer = "Banff_to_Helmsdale_WeBS")
polygs<-spTransform(polygs, main.crs)
names(polygs)
sort(unique(polygs$NAME))
# merge polygons within the Beauly Firth
polygs$NAME<- revalue(polygs$NAME, c("Lentran"="Beauly Firth","Lentran to Bunchrew"="Beauly Firth", "Beauly Firth North"="Beauly Firth",
"South Kessock"="Beauly Firth", "Ness Mouth"="Beauly Firth"))
polygs <- aggregate(polygs, by= "NAME", dissolve=T)
plot(polygs)
plot(locs, add=TRUE, pch=20, col="red")
spplot(polygs, ycol="NAME")  # looks good
# iww monitoring project observations
iww <- read_excel("Data/IWW_data/IWW_2020_rv.xlsx", sheet = 2)
names(iww)
head(iww)
unique(iww$taxonName)
sort(unique(iww$VP_code))
sort(unique(locs$VP_code))
setdiff(iww$VP_code,locs$VP_code) # all codes in iww are in locs
setdiff(locs$VP_code,iww$VP_code)  # not all codes in locs are in iww, but that is ok
# 2. Subset IWW data by date ----------------------------------------------
# available dates: "2020-01-19", "2020-01-21", "2020-03-08", "2020-03-09"
# 1st aerial survey: "2020-01-19", 2nd aerial survey: "2020-03-08"
survey.date <- "2020-01-19"
iww$Date <- as.character(iww$Date)
iww <- iww[iww$Date == survey.date, ]
iww <- iww[ c(3,4,8,13,20, 21) ]
names(iww)
# subset only locs with IWW data
uniq.iww.vpcodes <- unique(iww$VP_code) # only for sectors with IWW VPs
locs.iww <- subset(locs, VP_code %in% uniq.iww.vpcodes )
# 3. Calculate buffer 2km and mask ----------------------------------------
locs.sf = st_as_sf(locs.iww)
mask.sf <- st_as_sf(mask)
locs.buffer = st_buffer(locs.sf, 2)
locs.sea = st_intersection(locs.buffer, mask.sf)
locs.sea$area = st_area(locs.sea)
locs.sea <- as(locs.sea,"Spatial")
locs.iww
nrow(locs.iww@data)
nrow(locs.sea@data)
iww.locs <- merge(iww, locs.sea, by.x="VP_code",by.y=c("VP_code"))
names(iww.locs)
unique(iww.locs$VP_code)
# Unique list of dates and species
unique(iww.locs$taxonName)
unique(iww.locs$Date)
# subset WeBS sectors with IWW observations inside
uniq.iww.sectors <- unique(iww.locs$sector)
polygs.iww <- subset(polygs, NAME %in% uniq.iww.sectors )
nrow(polygs.iww@data)
polygs.iww@data
locs.sea@data
# clean tables
locs.sea$area <- clean_units(locs.sea$area)
locs.sea <- locs.sea[ -c(2,3,4,5,6,9,10) ]
names(locs.sea)
locs.sea@data
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
names
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
# Species subset ("Common eider", "Common scoter", "Red-throated diver")
spp <- "Common eider"
iww.sub <- iww.locs[iww.locs$taxonName == spp, ]
iww.sub <- iww.sub[complete.cases(iww.sub[ , 1]),] # I do not know why the previous line generates an NA, we remove it
counts <- aggregate(Number~sector, iww.sub, mean)  # mean of individuals
locs.sector <- aggregate(locs.sea, by= "sector", dissolve=T)
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
iww.aggr
# Assign coordinates to IWW locations based on VP code
iww.locs <- merge(iww, locs.sea, by.x="VP_code",by.y=c("VP_code"))
iww.locs
uniq.iww.sectors <- unique(iww.locs$sector)
polygs.iww <- subset(polygs, NAME %in% uniq.iww.sectors )
iww.locs
names(iww.locs)
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
names
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
names(iww.locs)
unique(iww.locs$VP_code)
# Unique list of dates and species
unique(iww.locs$taxonName)
unique(iww.locs$Date)
uniq.iww.sectors <- unique(iww.locs$sector)
polygs.iww <- subset(polygs, NAME %in% uniq.iww.sectors )
# clean tables
locs.sea$area <- clean_units(locs.sea$area)
locs.sea <- locs.sea[ -c(2,3,4,5,6,9,10) ]
names(locs.sea)
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
names
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
ncol(iww.aggr)
# Assign coordinates to IWW locations based on VP code
iww.locs <- merge(iww, locs.sea, by.x="VP_code",by.y=c("VP_code"))
locs.buffer = st_buffer(locs.sf, 2)
locs.sea = st_intersection(locs.buffer, mask.sf)
locs.sea$area = st_area(locs.sea)
locs.sea <- as(locs.sea,"Spatial")
# Assign coordinates to IWW locations based on VP code
iww.locs <- merge(iww, locs.sea, by.x="VP_code",by.y=c("VP_code"))
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
names
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
