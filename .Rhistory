crs(raster.mask) <- main.crs
res(raster.mask) <- c(1,1)
raster.mask <- rasterize(mask, raster.mask,1)
raster.mask[is.na(raster.mask[])] <- 0
# sighting locations
locs <- read_excel("VPs_sectors_coordinates_rv.xlsx",sheet=1)
# Aggregate WeBS sectors inside the Beauly Firth (overlapping areas between both sides of the firth)
locs$sector <- locs$WeBS_sector
locs$sector<- revalue(locs$WeBS_sector, c("Lentran to Bunchrew"="Beauly Firth", "Beauly Firth North"="Beauly Firth",
"South Kessock"="Beauly Firth", "Ness Mouth"="Beauly Firth"))
coordinates(locs) <- c("Lon","Lat")
crs(locs) <- geogr
locs<-spTransform(locs, main.crs)
plot(locs)
# Polygons with the WeBS areas
polygs<- readOGR(dsn = "./Shapefile", layer = "Banff_to_Helmsdale_WeBS")
polygs<-spTransform(polygs, main.crs)
names(polygs)
sort(unique(polygs$NAME))
# merge polygons within the Beauly Firth
polygs$NAME<- revalue(polygs$NAME, c("Lentran"="Beauly Firth","Lentran to Bunchrew"="Beauly Firth", "Beauly Firth North"="Beauly Firth",
"South Kessock"="Beauly Firth", "Ness Mouth"="Beauly Firth"))
polygs <- aggregate(polygs, by= "NAME", dissolve=T)
plot(polygs)
plot(locs, add=TRUE, pch=20, col="red")
spplot(polygs, ycol="NAME")  # looks good
# iww monitoring project observations
iww <- read_excel("IWW_data/IWW_2020_rv.xlsx", sheet = 2)
names(iww)
head(iww)
unique(iww$taxonName)
sort(unique(iww$VP_code))
sort(unique(locs$VP_code))
setdiff(iww$VP_code,locs$VP_code) # all codes in iww are in locs
setdiff(locs$VP_code,iww$VP_code)  # not all codes in locs are in iww, but that is ok
# 2. Subset IWW data by date ----------------------------------------------
# available dates: "2020-01-19", "2020-01-21", "2020-03-08", "2020-03-09"
# 1st aerial survey: "2020-01-19", 2nd aerial survey: "2020-03-08"
survey.date <- "2020-01-19"
iww$Date <- as.character(iww$Date)
iww <- iww[iww$Date == survey.date, ]
iww <- iww[ c(3,4,8,13,20, 21) ]
names(iww)
# subset only locs with IWW data
uniq.iww.vpcodes <- unique(iww$VP_code) # only for sectors with IWW VPs
locs.iww <- subset(locs, VP_code %in% uniq.iww.vpcodes )
# 3. Calculate buffer 2km and mask ----------------------------------------
locs.sf = st_as_sf(locs.iww)
mask.sf <- st_as_sf(mask)
locs.buffer = st_buffer(locs.sf, 2)
locs.sea = st_intersection(locs.buffer, mask.sf)
locs.sea$area = st_area(locs.sea)
locs.sea <- as(locs.sea,"Spatial")
setwd("D:/PROJECTS_CURRENT/SNH_Moray_Firth/SNH_Moray_Firth/")
library(rgdal)
library(readxl)
library(raster)
library(sf)
library(plyr)
geogr<-CRS("+init=epsg:4326")
main.crs = "+init=epsg:32630 +proj=utm +zone=30 +datum=WGS84 +units=km +no_defs +ellps=WGS84 +towgs84=0,0,0"
clean_units <- function(x){
attr(x,"units") <- NULL
class(x) <- setdiff(class(x),"units")
x
}
# 1. Load data ------------------------------------------------------------
# accesory layers
mask <- readOGR(dsn = "Data/Shapefile", layer = "Moray_Firth_Area_WGS84")
mask<-spTransform(mask, main.crs)
# We make a raster mask...
# not really needed, but it might be useful (...who knows)
extension <- extent(mask)
raster.mask <- raster()
extent(raster.mask) <- extension
crs(raster.mask) <- main.crs
res(raster.mask) <- c(1,1)
raster.mask <- rasterize(mask, raster.mask,1)
raster.mask[is.na(raster.mask[])] <- 0
# sighting locations
locs <- read_excel("Data/VPs_sectors_coordinates_rv.xlsx",sheet=1)
# Aggregate WeBS sectors inside the Beauly Firth (overlapping areas between both sides of the firth)
locs$sector <- locs$WeBS_sector
locs$sector<- revalue(locs$WeBS_sector, c("Lentran to Bunchrew"="Beauly Firth", "Beauly Firth North"="Beauly Firth",
"South Kessock"="Beauly Firth", "Ness Mouth"="Beauly Firth"))
coordinates(locs) <- c("Lon","Lat")
crs(locs) <- geogr
locs<-spTransform(locs, main.crs)
plot(locs)
# Polygons with the WeBS areas
polygs<- readOGR(dsn = "Data/Shapefile", layer = "Banff_to_Helmsdale_WeBS")
polygs<-spTransform(polygs, main.crs)
names(polygs)
sort(unique(polygs$NAME))
# merge polygons within the Beauly Firth
polygs$NAME<- revalue(polygs$NAME, c("Lentran"="Beauly Firth","Lentran to Bunchrew"="Beauly Firth", "Beauly Firth North"="Beauly Firth",
"South Kessock"="Beauly Firth", "Ness Mouth"="Beauly Firth"))
polygs <- aggregate(polygs, by= "NAME", dissolve=T)
plot(polygs)
plot(locs, add=TRUE, pch=20, col="red")
spplot(polygs, ycol="NAME")  # looks good
# iww monitoring project observations
iww <- read_excel("Data/IWW_data/IWW_2020_rv.xlsx", sheet = 2)
names(iww)
head(iww)
unique(iww$taxonName)
sort(unique(iww$VP_code))
sort(unique(locs$VP_code))
setdiff(iww$VP_code,locs$VP_code) # all codes in iww are in locs
setdiff(locs$VP_code,iww$VP_code)  # not all codes in locs are in iww, but that is ok
# 2. Subset IWW data by date ----------------------------------------------
# available dates: "2020-01-19", "2020-01-21", "2020-03-08", "2020-03-09"
# 1st aerial survey: "2020-01-19", 2nd aerial survey: "2020-03-08"
survey.date <- "2020-01-19"
iww$Date <- as.character(iww$Date)
iww <- iww[iww$Date == survey.date, ]
iww <- iww[ c(3,4,8,13,20, 21) ]
names(iww)
# subset only locs with IWW data
uniq.iww.vpcodes <- unique(iww$VP_code) # only for sectors with IWW VPs
locs.iww <- subset(locs, VP_code %in% uniq.iww.vpcodes )
# 3. Calculate buffer 2km and mask ----------------------------------------
locs.sf = st_as_sf(locs.iww)
mask.sf <- st_as_sf(mask)
locs.buffer = st_buffer(locs.sf, 2)
locs.sea = st_intersection(locs.buffer, mask.sf)
locs.sea$area = st_area(locs.sea)
locs.sea <- as(locs.sea,"Spatial")
locs.iww
nrow(locs.iww@data)
nrow(locs.sea@data)
iww.locs <- merge(iww, locs.sea, by.x="VP_code",by.y=c("VP_code"))
names(iww.locs)
unique(iww.locs$VP_code)
# Unique list of dates and species
unique(iww.locs$taxonName)
unique(iww.locs$Date)
# subset WeBS sectors with IWW observations inside
uniq.iww.sectors <- unique(iww.locs$sector)
polygs.iww <- subset(polygs, NAME %in% uniq.iww.sectors )
nrow(polygs.iww@data)
polygs.iww@data
locs.sea@data
# clean tables
locs.sea$area <- clean_units(locs.sea$area)
locs.sea <- locs.sea[ -c(2,3,4,5,6,9,10) ]
names(locs.sea)
locs.sea@data
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
names
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
# Species subset ("Common eider", "Common scoter", "Red-throated diver")
spp <- "Common eider"
iww.sub <- iww.locs[iww.locs$taxonName == spp, ]
iww.sub <- iww.sub[complete.cases(iww.sub[ , 1]),] # I do not know why the previous line generates an NA, we remove it
counts <- aggregate(Number~sector, iww.sub, mean)  # mean of individuals
locs.sector <- aggregate(locs.sea, by= "sector", dissolve=T)
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
iww.aggr
# Assign coordinates to IWW locations based on VP code
iww.locs <- merge(iww, locs.sea, by.x="VP_code",by.y=c("VP_code"))
iww.locs
uniq.iww.sectors <- unique(iww.locs$sector)
polygs.iww <- subset(polygs, NAME %in% uniq.iww.sectors )
iww.locs
names(iww.locs)
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
names
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
names(iww.locs)
unique(iww.locs$VP_code)
# Unique list of dates and species
unique(iww.locs$taxonName)
unique(iww.locs$Date)
uniq.iww.sectors <- unique(iww.locs$sector)
polygs.iww <- subset(polygs, NAME %in% uniq.iww.sectors )
# clean tables
locs.sea$area <- clean_units(locs.sea$area)
locs.sea <- locs.sea[ -c(2,3,4,5,6,9,10) ]
names(locs.sea)
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
names
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
ncol(iww.aggr)
# Assign coordinates to IWW locations based on VP code
iww.locs <- merge(iww, locs.sea, by.x="VP_code",by.y=c("VP_code"))
locs.buffer = st_buffer(locs.sf, 2)
locs.sea = st_intersection(locs.buffer, mask.sf)
locs.sea$area = st_area(locs.sea)
locs.sea <- as(locs.sea,"Spatial")
# Assign coordinates to IWW locations based on VP code
iww.locs <- merge(iww, locs.sea, by.x="VP_code",by.y=c("VP_code"))
# first we take the first line of each VP code (several groups of the same spp can be sighted by VP)
# we do it before subsetting the species to include effort in VPs with zero observations
iww.aggr <- ddply(iww.locs, "sector", head, 1)
names
iww.aggr <- iww.aggr[ c(4,13) ]  # TIME and UNIQUE VPs (with or without observation)
spp <- "Common scoter"  # Species subset ("Common eider", "Common scoter", "Red-throated diver")
survey.date <- "2020-01-19"  # 1st aerial survey: "2020-01-19", 2nd aerial survey: "2020-03-08"
input.name <- paste0("outputs/",spp,"_",survey.date,".RData") # IWW results were named as "spp_date.RData"
IWWData <- load(input.name)
plot(buffer_ras)  # we are going to use the raster output
month <- "01"
input.name <- paste0(spp,"_month",month,".rds")  #output was named "spp_survey01.rds" for results from the first survey
input.name <- paste0("outputs/",spp,"_month",month,".rds")  #output was named "spp_survey01.rds" for results from the first survey
hd.raster <- readRDS(input.name)
plot(hd.raster)   # we check the raster
hd.raster <- readRDS(input.name)
plot(hd.raster)   # we check the raster
plot(buffer_ras)  # we are going to use the raster output
plot(hd.raster)   # we check the raster
crs(hd.raster) <- crs(buffer_ras)  # give same crs
iww.res <- resample(buffer_ras, hd.raster)  # resample buffer_ras to get same extent and resolution than hd.raster
# check resolution and extensions
res(iww.res)
extent(iww.res)
plot(iww.res)
res(hd.raster)
extent(hd.raster)
# Mask raster hd.raster to get same area than iww.res
hd.crop<- mask(hd.raster, iww.res)
# extract values
r1 <- values(hd.crop)
r2 <- values(iww.res)
# scatterplot
plot(r1, r2)
# Pearson?s correlation
cor(r1, r2, use= "pairwise.complete.obs")
# Linear model
lm1 <- lm(r1 ~ r2)
summary(lm1)  # significance of r2
plot(lm1)
# Pearson?s correlation
cor(log(r1), r2, use= "pairwise.complete.obs")
# Linear model
lm1 <- lm(log(r1) ~ r2)
summary(lm1)  # significance of r2
plot(lm1)
# scatterplot
plot(log(r1), r2)
r1
plot(r1)
# Pearson?s correlation
cor(log(r1), log(r2), use= "pairwise.complete.obs")
# scatterplot
plot(log(r1), log(r2))
# Pearson?s correlation
cor(log(r1), log(r2), use= "pairwise.complete.obs")
# Pearson?s correlation
cor(log(r1), log(r2), use= "pairwise.complete.obs",na.rm=T)
# Pearson?s correlation
cor(log(r1), log(r2), use= "pairwise.complete.obs",na.action=na.omit)
log(r1)
log(r2)
log(0)
log(-10)
log(-1)
r2[r2==0] <- 0.0000001
# scatterplot
plot(log(r1), log(r2))
# Pearson?s correlation
cor(log(r1), log(r2), use= "pairwise.complete.obs")
log(0.000001)
e
1/log(-13.81551)
exp(-13.81551)
log(0.01)
log(0.1)
# Linear model
lm1 <- lm(log(r1) ~ log(r2))
summary(lm1)  # significance of r2
plot(lm1)
plot(r1,r2)
# scatterplot
plot(log(r1), log(r2))
compare.rasters <- function(hd.raster,buffer_ras,log.scale=T){
# give same crs
crs(hd.raster) <- crs(buffer_ras)
# resample buffer_ras to get same extent and resolution than hd.raster
iww.res <- resample(buffer_ras, hd.raster)
# Mask raster hd.raster to get same area as iww.res
hd.crop<- mask(hd.raster, iww.res)
# extract values
r1 <- values(hd.crop)
r2 <- values(iww.res)
r2[r2==0] <- 0.0000001
# scatterplot
if(log.scale==TRUE){
r1 <- log(r1)
r2 <- log(r2)
}
# Pearsons correlation
rvalue <- cor(log(r1), log(r2), use= "pairwise.complete.obs")
# Linear model
lm1 <- lm(r1 ~ r2)
print(paste("Pearson's correlation =",rvalue))
print(summary(lm1))
return(list(hd=r1,iww=r2))
}
load.rasters(spp,survey.date,month){
# IWW results were named as "spp_date.RData"
input.name <<- paste0("outputs/",spp,"_",survey.date,".RData")
IWWData <- load(input.name)
#output was named "spp_monthxx.rds" for results from the first survey
input.name <- paste0("outputs/",spp,"_month",month,".rds")
hd.raster <<- readRDS(input.name)
}
load.rasters(spp,survey.date,month){
# IWW results were named as "spp_date.RData"
input.name <<- paste0("outputs/",spp,"_",survey.date,".RData")
IWWData <- load(input.name)
#output was named "spp_monthxx.rds" for results from the first survey
input.name <- paste0("outputs/",spp,"_month",month,".rds")
hd.raster <<- readRDS(input.name)
}
load.rasters(spp,survey.date,month){
# IWW results were named as "spp_date.RData"
input.name <<- paste0("outputs/",spp,"_",survey.date,".RData")
IWWData <- load(input.name)
#output was named "spp_monthxx.rds" for results from the first survey
input.name <- paste0("outputs/",spp,"_month",month,".rds")
hd.raster <<- readRDS(input.name)
}
load.rasters <- function(spp,survey.date,month){
# IWW results were named as "spp_date.RData"
input.name <<- paste0("outputs/",spp,"_",survey.date,".RData")
IWWData <- load(input.name)
#output was named "spp_monthxx.rds" for results from the first survey
input.name <- paste0("outputs/",spp,"_month",month,".rds")
hd.raster <<- readRDS(input.name)
}
compare.rasters <- function(hd.raster,buffer_ras,log.scale=T){
# give same crs
crs(hd.raster) <- crs(buffer_ras)
# resample buffer_ras to get same extent and resolution than hd.raster
iww.res <- resample(buffer_ras, hd.raster)
# Mask raster hd.raster to get same area as iww.res
hd.crop<- mask(hd.raster, iww.res)
# extract values
r1 <- values(hd.crop)
r2 <- values(iww.res)
r2[r2==0] <- 0.0000001
# scatterplot
if(log.scale==TRUE){
r1 <- log(r1)
r2 <- log(r2)
}
# Pearsons correlation
rvalue <- cor(log(r1), log(r2), use= "pairwise.complete.obs")
# Linear model
lm1 <- lm(r1 ~ r2)
print(paste("Pearson's correlation =",rvalue))
print(summary(lm1))
return(list(hd=r1,iww=r2))
}
load.rasters(spp,SurveyDate,month)
load.rasters(spp,survey.date,month)
valuesout <- compare.rasters(hd.raster,buffer_ras,log.scale=T)
# Pearsons correlation
rvalue <- cor(r1, r2, use= "pairwise.complete.obs")
compare.rasters <- function(hd.raster,buffer_ras,log.scale=T){
# give same crs
crs(hd.raster) <- crs(buffer_ras)
# resample buffer_ras to get same extent and resolution than hd.raster
iww.res <- resample(buffer_ras, hd.raster)
# Mask raster hd.raster to get same area as iww.res
hd.crop<- mask(hd.raster, iww.res)
# extract values
r1 <- values(hd.crop)
r2 <- values(iww.res)
r2[r2==0] <- 0.0000001
# scatterplot
if(log.scale==TRUE){
r1 <- log(r1)
r2 <- log(r2)
}
# Pearsons correlation
rvalue <- cor(r1, r2, use= "pairwise.complete.obs")
# Linear model
lm1 <- lm(r1 ~ r2)
print(paste("Pearson's correlation =",rvalue))
print(summary(lm1))
return(list(hd=r1,iww=r2))
}
valuesout <- compare.rasters(hd.raster,buffer_ras,log.scale=T)
compare.rasters <- function(hd.raster,buffer_ras,log.scale=T){
# give same crs
crs(hd.raster) <- crs(buffer_ras)
# resample buffer_ras to get same extent and resolution than hd.raster
iww.res <- resample(buffer_ras, hd.raster)
# Mask raster hd.raster to get same area as iww.res
hd.crop<- mask(hd.raster, iww.res)
# extract values
r1 <- values(hd.crop)
r2 <- values(iww.res)
r2[r2==0] <- 0.0000001
# scatterplot
if(log.scale==TRUE){
print("Comparing values on the log scale")
r1 <- log(r1)
r2 <- log(r2)
}
# Pearsons correlation
rvalue <- cor(r1, r2, use= "pairwise.complete.obs")
# Linear model
lm1 <- lm(r1 ~ r2)
print(paste("Pearson's correlation =",rvalue))
print(summary(lm1))
return(list(hd=r1,iww=r2))
}
spp <- "Common scoter"  # Species subset ("Common eider", "Common scoter", "Red-throated diver")
survey.date <- "2020-01-19"  # 1st aerial survey: "2020-01-19", 2nd aerial survey: "2020-03-08"
month <- "01"
load.rasters <- function(spp,survey.date,month){
# IWW results were named as "spp_date.RData"
input.name <<- paste0("outputs/",spp,"_",survey.date,".RData")
IWWData <- load(input.name)
#output was named "spp_monthxx.rds" for results from the first survey
input.name <- paste0("outputs/",spp,"_month",month,".rds")
hd.raster <<- readRDS(input.name)
}
compare.rasters <- function(hd.raster,buffer_ras,log.scale=T){
# give same crs
crs(hd.raster) <- crs(buffer_ras)
# resample buffer_ras to get same extent and resolution than hd.raster
iww.res <- resample(buffer_ras, hd.raster)
# Mask raster hd.raster to get same area as iww.res
hd.crop<- mask(hd.raster, iww.res)
# extract values
r1 <- values(hd.crop)
r2 <- values(iww.res)
r2[r2==0] <- 0.0000001
# scatterplot
if(log.scale==TRUE){
print("Comparing values on the log scale")
r1 <- log(r1)
r2 <- log(r2)
}
# Pearsons correlation
rvalue <- cor(r1, r2, use= "pairwise.complete.obs")
# Linear model
lm1 <- lm(r1 ~ r2)
print(paste("Pearson's correlation =",rvalue))
print(summary(lm1))
return(list(hd=r1,iww=r2))
}
load.rasters(spp,survey.date,month)
valuesout <- compare.rasters(hd.raster,buffer_ras,log.scale=T)
polygs.iww@data
polygs.dens@data
test <- extract(hd.raster,polygs.dens)
test
length(test)
nrow(polygs.dens@data)
lapply(test,function(x) mean(x,na.rm=T))
unlist(lapply(test,function(x) mean(x,na.rm=T)))
dfout <- data.frame(hd.data=unlist(lapply(test,function(x) mean(x,na.rm=T))),
iww.data=polygs.dens@data$dens)
dfout
lm(dfout$hd.data,dfout$iww.data)
lm(dfout$hd.data~dfout$iww.data)
summary(lm(dfout$hd.data~dfout$iww.data))
plot(lm(dfout$hd.data~dfout$iww.data))
plot(dfout$hd.data,dfout$iww.data)
plot(log(dfout$hd.data),log(dfout$iww.data))
summary(lm(log(dfout$hd.data)~log(dfout$iww.data)))
cor(log(dfout$hd.data),log(dfout$iww.data))
df
View(dfout)
log(1)
cor(log(dfout$hd.data),log(dfout$iww.data),use= "pairwise.complete.obs")
cor(dfout$hd.data,dfout$iww.data,use= "pairwise.complete.obs")
dfout$iww.data[dfout$iww.data==0] <- 0.01
cor(log(dfout$hd.data),log(dfout$iww.data),use= "pairwise.complete.obs")
plot(log(dfout$hd.data),log(dfout$iww.data))
compare.polygons <- function(polgys.dens,hd.raster,log.scale=T){
#Extract raster values to the polygons
extracted <- extract(hd.raster,polygs.dens)
dfout <- data.frame(hd.data=unlist(lapply(extracted,function(x) mean(x,na.rm=T))),
iww.data=polygs.dens@data$dens,
iww.site=polygs.dens@data$NAME)
do.correlation(dfout$hd.data,dfout$iww.data,log.scale=log.scale)
}
do.correlation <- function(r1,r2,log.scale=T){
## Adds a little noise to a value of 0 in case log scale is applied
r1[r1==0] <- 0.0000001
r2[r2==0] <- 0.0000001
# scatterplot
if(log.scale==TRUE){
print("Comparing values on the log scale")
r1 <- log(r1)
r2 <- log(r2)
}
# Pearsons correlation
rvalue <- cor(r1, r2, use= "pairwise.complete.obs")
# Linear model
lm1 <- lm(r1 ~ r2)
print(paste("Pearson's correlation =",rvalue))
print(summary(lm1))
return(list(rvalue=rvalue,lm1=lm1))
}
valuesout <- compare.rasters(hd.raster,buffer_ras,log.scale=T)
psout <- compare.polygons(polgys.dens,hd.raster,log.scale = T)
